apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mimir-data
  name: mimir-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
data:
  mimir-config.yml: |
    # Do not use this configuration in production.
    # It is for demonstration purposes only.
    multitenancy_enabled: false

    activity_tracker: {}

    alertmanager: {}

    alertmanager_storage:
      backend: local

    server:
      http_listen_port: 9009

      # Configure the server to allow messages up to 100MB.
      grpc_server_max_recv_msg_size: 104857600
      grpc_server_max_send_msg_size: 104857600
      grpc_server_max_concurrent_streams: 1000

    distributor:
      pool:
        health_check_ingesters: true

    ingester_client:
      grpc_client_config:
        grpc_compression: gzip
        max_recv_msg_size: 104857600
        max_send_msg_size: 104857600

    ingester:
      ring:
        final_sleep: 0s
        kvstore:
          store: inmemory
        min_ready_duration: 0s
        num_tokens: 512
        replication_factor: 1

    blocks_storage:
      backend: filesystem
      bucket_store:
        sync_dir: /tmp/mimir/tsdb-sync
      filesystem:
        dir: /tmp/mimir/blocks
      tsdb:
        dir: /tmp/mimir/tsdb

    compactor:
      sharding_ring:
        kvstore:
          store: inmemory

    ruler:
      enable_api: true

    ruler_storage:
      backend: filesystem
      local:
        directory: /tmp/mimir/rules

    limits:
      ingestion_burst_size: 500000
      ingestion_rate: 250000
      max_global_exemplars_per_user: 100000
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: mimir
  name: mimir-cm0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /home/fvergnes/.asdf/installs/kompose/1.34.0/bin/kompose -f docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: mimir
  name: mimir
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mimir
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /home/fvergnes/.asdf/installs/kompose/1.34.0/bin/kompose -f docker-compose.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: mimir
    spec:
      containers:
        - args:
            - -config.file=/etc/mimir-config
          image: grafana/mimir:2.12.0
          name: mimir
          ports:
            - containerPort: 9009
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/mimir-config
              name: mimir-cm0
              subPath: mimir-config
            - mountPath: /tmp/mimir
              name: mimir-data
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: mimir-config.yml
                path: mimir-config
            name: mimir-cm0
          name: mimir-cm0
        - name: mimir-data
          persistentVolumeClaim:
            claimName: mimir-data
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: /home/fvergnes/.asdf/installs/kompose/1.34.0/bin/kompose -f docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: mimir
  name: mimir
spec:
  ports:
    - name: "9009"
      port: 9009
      targetPort: 9009
  selector:
    io.kompose.service: mimir
