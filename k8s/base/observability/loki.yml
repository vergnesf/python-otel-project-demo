apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: loki-data
  name: loki-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
data:
  loki-config.yml: |
    ---
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096

    common:
      instance_addr: 127.0.0.1
      path_prefix: /tmp/loki
      storage:
        filesystem:
          chunks_directory: /tmp/loki/chunks
          rules_directory: /tmp/loki/rules
      replication_factor: 1
      ring:
        kvstore:
          store: inmemory

    # query_range:
    #   results_cache:
    #     cache:
    #       embedded_cache:
    #         enabled: true
    #         max_size_mb: 100

    schema_config:
      configs:
        - from: 2020-10-24
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: index_
            period: 24h

    ruler:
      alertmanager_url: http://localhost:9093

    frontend:
      encoding: protobuf
    # By default, Loki will send anonymous, but uniquely-identifiable usage and configuration
    # analytics to Grafana Labs. These statistics are sent to https://stats.grafana.org/
    #
    # Statistics help us better understand how Loki is used, and they show us performance
    # levels for most users. This helps us prioritize features and documentation.
    # For more information on what's sent, look at
    # https://github.com/grafana/loki/blob/main/pkg/analytics/stats.go
    # Refer to the buildReport method to see what goes into a report.
    #
    # If you would like to disable reporting, uncomment the following lines:
    #analytics:
    #  reporting_enabled: false
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: loki
  name: loki-cm0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /home/fvergnes/.asdf/installs/kompose/1.34.0/bin/kompose -f docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: loki
  name: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: loki
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /home/fvergnes/.asdf/installs/kompose/1.34.0/bin/kompose -f docker-compose.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: loki
    spec:
      containers:
        - args:
            - -config.file=/etc/config/loki.yaml
          image: grafana/loki:3.0.0
          name: loki
          ports:
            - containerPort: 3100
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/config/loki.yaml
              name: loki-cm0
              subPath: loki.yaml
            - mountPath: /tmp/loki
              name: loki-data
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: loki-config.yml
                path: loki.yaml
            name: loki-cm0
          name: loki-cm0
        - name: loki-data
          persistentVolumeClaim:
            claimName: loki-data
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: /home/fvergnes/.asdf/installs/kompose/1.34.0/bin/kompose -f docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: loki
  name: loki
spec:
  ports:
    - name: "3100"
      port: 3100
      targetPort: 3100
  selector:
    io.kompose.service: loki
